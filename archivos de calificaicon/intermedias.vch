fn main() {
    mut puntos int = 0;

    print("=== Archivo de prueba de funcionalidades intermedias ===");
    print("Validaciones manuales esperadas: 4");

    // 1. Manejo de entornos (3 puntos)
    print("==== Manejo de entornos ====");
    mut puntosEntornos int = 0;

    print("\nVariable redeclarada en un entorno diferente");
    mut b int = 10;
    if (true) {
        // Esto es válido si tu lenguaje permite el sombreado de variables (shadowing)
        mut b int = 20;
        print("b dentro del if =", b);

        if (b == 20) {
            puntosEntornos = puntosEntornos + 2;
            print("OK Redeclaración en entorno diferente: correcto");
        } else {
            print("X Redeclaración en entorno diferente: incorrecto");
        }
    }
    print("b fuera del if =", b);

    print("\nUso de variable en un entorno superior");
    mut c int = 10;
    mut d int = 10;
    if (true) {
        // d se redefine en este ámbito
        mut d int = 20;
        // c es accesible desde el ámbito superior
        print("c dentro del if =", c);
        print("d dentro del if =", d);

        // Modificamos c del ámbito superior
        c = 30;
        // Modificamos d del ámbito local
        d = 30;
    }
    print("c fuera del if =", c);
    print("d fuera del if =", d);

    if (c == 30 && d == 10) {
        puntosEntornos = puntosEntornos + 1;
        print("OK Uso de variable en entorno superior: correcto");
    } else {
        print("X Uso de variable en entorno superior: incorrecto");
    }

    // 2. If / Else (3 puntos)
    print("\n==== If / Else ====");
    mut puntosIfElse int = 0;

    print("\n\n###Validacion Manual");
    print("If simple");
    if (true) {
        print("Condición verdadera");
        puntosIfElse = puntosIfElse + 1;
    }

    print("\nIf-Else");
    if (true) {
        print("Condición verdadera en if-else");
    } else {
        print("Condición falsa en if-else");
    }

    if (false) {
        print("Esto no debería imprimirse");
    } else {
        print("Condición falsa, ejecutando else");
        puntosIfElse = puntosIfElse + 1;
    }

    print("\nIf-ElseIf-Else");
    if (true) {
        print("Primera condición verdadera");
    } else if (true) {
        print("Segunda condición verdadera, pero no se ejecuta");
    } else {
        print("Ninguna condición verdadera");
    }

    if (false) {
        print("Primera condición falsa");
    } else if (true) {
        print("Segunda condición verdadera");
        puntosIfElse = puntosIfElse + 1;
    } else {
        print("Ninguna condición verdadera");
    }
    print("");

    // 3. For Tipo While (4 puntos)
    print("\n==== For Tipo While ====");
    mut puntosForWhile int = 0;

    print("For como while simple");
    mut i int = 0;
    mut suma int = 0;
    for (i < 5) {
        print("i =", i);
        suma = suma + i;
        i = i + 1;
    }

    if (suma == 10) {
        puntosForWhile = puntosForWhile + 1;
        print("OK For como while simple: correcto");
    } else {
        print("X For como while simple: incorrecto");
    }

    print("\nFor como while con condición compuesta");
    mut j int = 0;
    mut producto int = 1;
    for (j < 5 && producto < 50) {
        j = j + 1;
        producto = producto * j;
        print("j =", j, "producto =", producto);
    }

    if (j == 5 && producto == 120) {
        puntosForWhile = puntosForWhile + 1;
        print("OK For como while con condición compuesta: correcto");
    } else {
        print("X For como while con condición compuesta: incorrecto");
    }

    print("\nFor como while anidado (patrón X)");
    print("\n\n###Validacion Manual");

    mut n int = 5;
    mut x int = 0;
    for (x < n) {
        mut j int = 0;
        mut fila string = "";

        for (j < n) {
            if (x == j || x+j == n-1) {
                fila = fila + "*";
            } else {
                fila = fila + " ";
            }
            j = j + 1;
        }

        print(fila);
        x = x + 1;
    }
    print("");

    if (x == 5) {
        puntosForWhile = puntosForWhile + 2;
        print("OK For como while anidado: correcto");
    } else {
        print("X For como while anidado: incorrecto");
    }

    // 4. For Clásico (3 puntos)
    print("\n==== For Clásico ====");
    mut puntosForClasico int = 0;

    print("For clásico simple");
    suma = 0;
    for mut i int = 0; i < 5; i = i + 1 {
        print("i =", i);
        suma = suma + i;
    }

    if (suma == 10) {
        puntosForClasico = puntosForClasico + 1;
        print("OK For clásico simple: correcto");
    } else {
        print("X For clásico simple: incorrecto");
    }

    print("\nFor clásico anidado (tabla de multiplicar)");
    print("\n\n###Validacion Manual");
    for mut i int = 1; i <= 3; i = i + 1 {
        for mut j int = 1; j <= 3; j = j + 1 {
            print(i, "x", j, "=", i*j);
        }
        print();
    }
    print("");

    puntosForClasico = puntosForClasico + 2;
    print("OK For clásico anidado: correcto");

    // 5. For Range (3 puntos)
    print("\n==== For Range ====");
    mut puntosForRange int = 0;

    print("For range con slice");
    numeros = []int{10, 20, 30, 40, 50};
    suma = 0;
    mut sumaIndices int = 0;

    for i, valor in numeros {
        print("Índice", i, "=", valor);
        suma = suma + valor;
        sumaIndices = sumaIndices + i;
    }

    if (suma == 150) {
        puntosForRange = puntosForRange + 2;
        print("OK For range con slice: correcto");
    } else {
        print("X For range con slice: incorrecto");
    }

    if (sumaIndices == 10) {
        puntosForRange = puntosForRange + 1;
        print("OK For range con índices: correcto");
    } else {
        print("X For range con índices: incorrecto");
    }

    // 6. Switch/Case (3 puntos)
    print("\n==== Switch/Case ====");
    mut puntosSwitch int = 0;

    print("\n\n###Validacion Manual");
    print("Switch simple");
    mut dia int = 1;

    switch dia {
    case 1:
        print("Lunes");
        puntosSwitch = puntosSwitch + 1;
    case 2:
        print("Martes");
    case 3:
        print("Miércoles");
    case 4:
        print("Jueves");
    case 5:
        print("Viernes");
    case 6:
        print("Sábado");
    case 7:
        print("Domingo");
    default:
        print("Día inválido");
    }

    print("\nSwitch con default");
    mut numero int = 100;

    switch numero {
    case 1:
        print("No se debería imprimir");
    case 2:
        print("No se debería imprimir");
    default:
        print("Número no reconocido, se ejecuta default");
        puntosSwitch = puntosSwitch + 1;
    }

    print("\nSwitch con break explícito");

    mut numeroBreak int = 2;

    switch numeroBreak {
    case 1:
        print("No se debería imprimir");
    case 2:
        print("Caso 2 - Se ejecuta este y debe detenerse");
        puntosSwitch = puntosSwitch + 1;
        break;
        print("No debería ejecutarse si el break funciona");
        puntosSwitch = puntosSwitch - 1;
    case 3:
        print("No se debería imprimir");
    }
    print("");

    // 7. Break (3 puntos)
    print("\n==== Break ====");
    mut puntosBreak int = 0;

    print("Break en for infinito");
    mut contador int = 0;
    suma = 0;

    for (true) {
        print("contador =", contador);
        suma = suma + contador;
        contador = contador + 1;

        if (contador >= 5) {
            break;
        }
    }

    if (suma == 10) {
        puntosBreak = puntosBreak + 1;
        print("OK Break en for infinito: correcto");
    } else {
        print("X Break en for infinito: incorrecto");
    }

    print("\nBreak en for clásico");
    suma = 0;

    for mut i int = 0; i < 10; i = i + 1 {
        print("i =", i);
        suma = suma + i;

        if (i >= 4) {
            break;
        }
    }

    if (suma == 10) {
        puntosBreak = puntosBreak + 2;
        print("OK Break en for clásico: correcto");
    } else {
        print("X Break en for clásico: incorrecto");
    }

    // 8. Continue (3 puntos)
    print("\n==== Continue ====");
    mut puntosContinue int = 0;

    print("Continue en for tipo while");
    contador = 0;
    mut impares int = 0;

    for (contador < 10) {
        contador = contador + 1;

        if (contador%2 == 0) {
            continue;
        }

        impares = impares + contador;
    }

    print("Números impares:", impares);

    if (impares == 25) {
        puntosContinue = puntosContinue + 1;
        print("OK Continue en for tipo while: correcto");
    } else {
        print("X Continue en for tipo while: incorrecto");
    }

    print("\nContinue en for clásico");
    mut pares int = 0;

    for mut i int = 0; i < 10; i = i + 1 {
        if (i%2 != 0) {
            continue;
        }

        pares = pares + i;
    }

    print("Números pares:", pares);

    if (pares == 20) {
        puntosContinue = puntosContinue + 2;
        print("OK Continue en for clásico: correcto");
    } else {
        print("X Continue en for clásico: incorrecto");
    }

    // Resumen de puntos
    puntos = puntosEntornos + puntosIfElse + puntosForWhile + puntosForClasico +
        puntosForRange + puntosSwitch + puntosBreak + puntosContinue;

    print("\n=== Tabla de Resultados ===");
    print("+--------------------------+--------+-------+");
    print("| Característica           | Puntos | Total |");
    print("+--------------------------+--------+-------+");
    print("| Manejo de entornos       | ", puntosEntornos, "    | 3     |");
    print("| If / Else                | ", puntosIfElse, "    | 3     |");
    print("| For Tipo While           | ", puntosForWhile, "    | 4     |");
    print("| For Clásico              | ", puntosForClasico, "    | 3     |");
    print("| For Range                | ", puntosForRange, "    | 3     |");
    print("| Switch/Case              | ", puntosSwitch, "    | 3     |");
    print("| Break                    | ", puntosBreak, "    | 3     |");
    print("| Continue                 | ", puntosContinue, "    | 3     |");
    print("+--------------------------+--------+-------+");
    print("| TOTAL                    | ", puntos, "   | 25    |");
    print("+--------------------------+--------+-------+");
}