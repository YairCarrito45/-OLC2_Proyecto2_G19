// Code generated from parser/Vlang.g4 by ANTLR 4.13.2. DO NOT EDIT.

package compiler

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type VlangLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var VlangLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func vlanglexerLexerInit() {
	staticData := &VlangLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'int'", "'float64'", "'string'", "'bool'", "'char'", "'mut'", "'struct'",
		"'fn'", "'println'", "'if'", "'else'", "'for'", "'while'", "'switch'",
		"'case'", "'default'", "'break'", "'continue'", "'return'", "':'", "'len'",
		"'cap'", "'indexOf'", "'join'", "'append'", "'in'", "", "", "", "",
		"", "", "'+'", "'-'", "'*'", "'/'", "'%'", "'!'", "'&&'", "'||'", "'=='",
		"'!='", "'<'", "'<='", "'>'", "'>='", "'='", "':='", "'+='", "'-='",
		"'++'", "'--'", "'('", "')'", "'{'", "'}'", "'['", "']'", "'.'", "','",
		"';'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "MUT", "STRUCT", "FUNC", "PRINT", "IF", "ELSE",
		"FOR", "WHILE", "SWITCH", "CASE", "DEFAULT", "BREAK", "CONTINUE", "RETURN",
		"COLON", "LEN", "CAP", "INDEXOF", "JOIN", "APPEND", "IN", "BOOLEANO",
		"ENTERO", "DECIMAL", "CADENA", "CARACTER", "ID", "PLUS", "MINUS", "MUL",
		"DIV", "MOD", "NOT", "AND", "OR", "EQ", "NEQ", "LT", "LE", "GT", "GE",
		"ASSIGN", "ASSIGN_DECL", "PLUSEQ", "MINUSEQ", "INC", "DEC", "LPAREN",
		"RPAREN", "LBRACE", "RBRACE", "LSQUARE", "RSQUARE", "DOT", "COMMA",
		"SEMICOLON", "WS", "LINE_COMMENT", "BLOCK_COMMENT",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "MUT", "STRUCT", "FUNC", "PRINT",
		"IF", "ELSE", "FOR", "WHILE", "SWITCH", "CASE", "DEFAULT", "BREAK",
		"CONTINUE", "RETURN", "COLON", "LEN", "CAP", "INDEXOF", "JOIN", "APPEND",
		"IN", "BOOLEANO", "ENTERO", "DECIMAL", "CADENA", "CARACTER", "ID", "PLUS",
		"MINUS", "MUL", "DIV", "MOD", "NOT", "AND", "OR", "EQ", "NEQ", "LT",
		"LE", "GT", "GE", "ASSIGN", "ASSIGN_DECL", "PLUSEQ", "MINUSEQ", "INC",
		"DEC", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LSQUARE", "RSQUARE",
		"DOT", "COMMA", "SEMICOLON", "WS", "LINE_COMMENT", "BLOCK_COMMENT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 64, 423, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3,
		1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5,
		1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8,
		1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1,
		10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12,
		1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1,
		14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15,
		1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1,
		17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18,
		1, 18, 1, 18, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1,
		21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23,
		1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1,
		24, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26,
		1, 26, 1, 26, 3, 26, 283, 8, 26, 1, 27, 4, 27, 286, 8, 27, 11, 27, 12,
		27, 287, 1, 28, 4, 28, 291, 8, 28, 11, 28, 12, 28, 292, 1, 28, 1, 28, 4,
		28, 297, 8, 28, 11, 28, 12, 28, 298, 1, 29, 1, 29, 1, 29, 1, 29, 5, 29,
		305, 8, 29, 10, 29, 12, 29, 308, 9, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1,
		30, 1, 30, 1, 31, 1, 31, 5, 31, 318, 8, 31, 10, 31, 12, 31, 321, 9, 31,
		1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1,
		37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 40,
		1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1,
		45, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 47, 1, 48, 1, 48, 1, 48,
		1, 49, 1, 49, 1, 49, 1, 50, 1, 50, 1, 50, 1, 51, 1, 51, 1, 51, 1, 52, 1,
		52, 1, 53, 1, 53, 1, 54, 1, 54, 1, 55, 1, 55, 1, 56, 1, 56, 1, 57, 1, 57,
		1, 58, 1, 58, 1, 59, 1, 59, 1, 60, 1, 60, 1, 61, 4, 61, 393, 8, 61, 11,
		61, 12, 61, 394, 1, 61, 1, 61, 1, 62, 1, 62, 1, 62, 1, 62, 5, 62, 403,
		8, 62, 10, 62, 12, 62, 406, 9, 62, 1, 62, 1, 62, 1, 63, 1, 63, 1, 63, 1,
		63, 5, 63, 414, 8, 63, 10, 63, 12, 63, 417, 9, 63, 1, 63, 1, 63, 1, 63,
		1, 63, 1, 63, 1, 415, 0, 64, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7,
		15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33,
		17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51,
		26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69,
		35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87,
		44, 89, 45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101, 51, 103, 52, 105,
		53, 107, 54, 109, 55, 111, 56, 113, 57, 115, 58, 117, 59, 119, 60, 121,
		61, 123, 62, 125, 63, 127, 64, 1, 0, 6, 1, 0, 48, 57, 2, 0, 34, 34, 92,
		92, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122,
		3, 0, 9, 10, 13, 13, 32, 32, 2, 0, 10, 10, 13, 13, 432, 0, 1, 1, 0, 0,
		0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0,
		0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0,
		0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1,
		0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33,
		1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0,
		41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0,
		0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0,
		0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0,
		0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1,
		0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79,
		1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0,
		87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0,
		0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0,
		0, 0, 0, 103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109,
		1, 0, 0, 0, 0, 111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0,
		0, 117, 1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1,
		0, 0, 0, 0, 125, 1, 0, 0, 0, 0, 127, 1, 0, 0, 0, 1, 129, 1, 0, 0, 0, 3,
		133, 1, 0, 0, 0, 5, 141, 1, 0, 0, 0, 7, 148, 1, 0, 0, 0, 9, 153, 1, 0,
		0, 0, 11, 158, 1, 0, 0, 0, 13, 162, 1, 0, 0, 0, 15, 169, 1, 0, 0, 0, 17,
		172, 1, 0, 0, 0, 19, 180, 1, 0, 0, 0, 21, 183, 1, 0, 0, 0, 23, 188, 1,
		0, 0, 0, 25, 192, 1, 0, 0, 0, 27, 198, 1, 0, 0, 0, 29, 205, 1, 0, 0, 0,
		31, 210, 1, 0, 0, 0, 33, 218, 1, 0, 0, 0, 35, 224, 1, 0, 0, 0, 37, 233,
		1, 0, 0, 0, 39, 240, 1, 0, 0, 0, 41, 242, 1, 0, 0, 0, 43, 246, 1, 0, 0,
		0, 45, 250, 1, 0, 0, 0, 47, 258, 1, 0, 0, 0, 49, 263, 1, 0, 0, 0, 51, 270,
		1, 0, 0, 0, 53, 282, 1, 0, 0, 0, 55, 285, 1, 0, 0, 0, 57, 290, 1, 0, 0,
		0, 59, 300, 1, 0, 0, 0, 61, 311, 1, 0, 0, 0, 63, 315, 1, 0, 0, 0, 65, 322,
		1, 0, 0, 0, 67, 324, 1, 0, 0, 0, 69, 326, 1, 0, 0, 0, 71, 328, 1, 0, 0,
		0, 73, 330, 1, 0, 0, 0, 75, 332, 1, 0, 0, 0, 77, 334, 1, 0, 0, 0, 79, 337,
		1, 0, 0, 0, 81, 340, 1, 0, 0, 0, 83, 343, 1, 0, 0, 0, 85, 346, 1, 0, 0,
		0, 87, 348, 1, 0, 0, 0, 89, 351, 1, 0, 0, 0, 91, 353, 1, 0, 0, 0, 93, 356,
		1, 0, 0, 0, 95, 358, 1, 0, 0, 0, 97, 361, 1, 0, 0, 0, 99, 364, 1, 0, 0,
		0, 101, 367, 1, 0, 0, 0, 103, 370, 1, 0, 0, 0, 105, 373, 1, 0, 0, 0, 107,
		375, 1, 0, 0, 0, 109, 377, 1, 0, 0, 0, 111, 379, 1, 0, 0, 0, 113, 381,
		1, 0, 0, 0, 115, 383, 1, 0, 0, 0, 117, 385, 1, 0, 0, 0, 119, 387, 1, 0,
		0, 0, 121, 389, 1, 0, 0, 0, 123, 392, 1, 0, 0, 0, 125, 398, 1, 0, 0, 0,
		127, 409, 1, 0, 0, 0, 129, 130, 5, 105, 0, 0, 130, 131, 5, 110, 0, 0, 131,
		132, 5, 116, 0, 0, 132, 2, 1, 0, 0, 0, 133, 134, 5, 102, 0, 0, 134, 135,
		5, 108, 0, 0, 135, 136, 5, 111, 0, 0, 136, 137, 5, 97, 0, 0, 137, 138,
		5, 116, 0, 0, 138, 139, 5, 54, 0, 0, 139, 140, 5, 52, 0, 0, 140, 4, 1,
		0, 0, 0, 141, 142, 5, 115, 0, 0, 142, 143, 5, 116, 0, 0, 143, 144, 5, 114,
		0, 0, 144, 145, 5, 105, 0, 0, 145, 146, 5, 110, 0, 0, 146, 147, 5, 103,
		0, 0, 147, 6, 1, 0, 0, 0, 148, 149, 5, 98, 0, 0, 149, 150, 5, 111, 0, 0,
		150, 151, 5, 111, 0, 0, 151, 152, 5, 108, 0, 0, 152, 8, 1, 0, 0, 0, 153,
		154, 5, 99, 0, 0, 154, 155, 5, 104, 0, 0, 155, 156, 5, 97, 0, 0, 156, 157,
		5, 114, 0, 0, 157, 10, 1, 0, 0, 0, 158, 159, 5, 109, 0, 0, 159, 160, 5,
		117, 0, 0, 160, 161, 5, 116, 0, 0, 161, 12, 1, 0, 0, 0, 162, 163, 5, 115,
		0, 0, 163, 164, 5, 116, 0, 0, 164, 165, 5, 114, 0, 0, 165, 166, 5, 117,
		0, 0, 166, 167, 5, 99, 0, 0, 167, 168, 5, 116, 0, 0, 168, 14, 1, 0, 0,
		0, 169, 170, 5, 102, 0, 0, 170, 171, 5, 110, 0, 0, 171, 16, 1, 0, 0, 0,
		172, 173, 5, 112, 0, 0, 173, 174, 5, 114, 0, 0, 174, 175, 5, 105, 0, 0,
		175, 176, 5, 110, 0, 0, 176, 177, 5, 116, 0, 0, 177, 178, 5, 108, 0, 0,
		178, 179, 5, 110, 0, 0, 179, 18, 1, 0, 0, 0, 180, 181, 5, 105, 0, 0, 181,
		182, 5, 102, 0, 0, 182, 20, 1, 0, 0, 0, 183, 184, 5, 101, 0, 0, 184, 185,
		5, 108, 0, 0, 185, 186, 5, 115, 0, 0, 186, 187, 5, 101, 0, 0, 187, 22,
		1, 0, 0, 0, 188, 189, 5, 102, 0, 0, 189, 190, 5, 111, 0, 0, 190, 191, 5,
		114, 0, 0, 191, 24, 1, 0, 0, 0, 192, 193, 5, 119, 0, 0, 193, 194, 5, 104,
		0, 0, 194, 195, 5, 105, 0, 0, 195, 196, 5, 108, 0, 0, 196, 197, 5, 101,
		0, 0, 197, 26, 1, 0, 0, 0, 198, 199, 5, 115, 0, 0, 199, 200, 5, 119, 0,
		0, 200, 201, 5, 105, 0, 0, 201, 202, 5, 116, 0, 0, 202, 203, 5, 99, 0,
		0, 203, 204, 5, 104, 0, 0, 204, 28, 1, 0, 0, 0, 205, 206, 5, 99, 0, 0,
		206, 207, 5, 97, 0, 0, 207, 208, 5, 115, 0, 0, 208, 209, 5, 101, 0, 0,
		209, 30, 1, 0, 0, 0, 210, 211, 5, 100, 0, 0, 211, 212, 5, 101, 0, 0, 212,
		213, 5, 102, 0, 0, 213, 214, 5, 97, 0, 0, 214, 215, 5, 117, 0, 0, 215,
		216, 5, 108, 0, 0, 216, 217, 5, 116, 0, 0, 217, 32, 1, 0, 0, 0, 218, 219,
		5, 98, 0, 0, 219, 220, 5, 114, 0, 0, 220, 221, 5, 101, 0, 0, 221, 222,
		5, 97, 0, 0, 222, 223, 5, 107, 0, 0, 223, 34, 1, 0, 0, 0, 224, 225, 5,
		99, 0, 0, 225, 226, 5, 111, 0, 0, 226, 227, 5, 110, 0, 0, 227, 228, 5,
		116, 0, 0, 228, 229, 5, 105, 0, 0, 229, 230, 5, 110, 0, 0, 230, 231, 5,
		117, 0, 0, 231, 232, 5, 101, 0, 0, 232, 36, 1, 0, 0, 0, 233, 234, 5, 114,
		0, 0, 234, 235, 5, 101, 0, 0, 235, 236, 5, 116, 0, 0, 236, 237, 5, 117,
		0, 0, 237, 238, 5, 114, 0, 0, 238, 239, 5, 110, 0, 0, 239, 38, 1, 0, 0,
		0, 240, 241, 5, 58, 0, 0, 241, 40, 1, 0, 0, 0, 242, 243, 5, 108, 0, 0,
		243, 244, 5, 101, 0, 0, 244, 245, 5, 110, 0, 0, 245, 42, 1, 0, 0, 0, 246,
		247, 5, 99, 0, 0, 247, 248, 5, 97, 0, 0, 248, 249, 5, 112, 0, 0, 249, 44,
		1, 0, 0, 0, 250, 251, 5, 105, 0, 0, 251, 252, 5, 110, 0, 0, 252, 253, 5,
		100, 0, 0, 253, 254, 5, 101, 0, 0, 254, 255, 5, 120, 0, 0, 255, 256, 5,
		79, 0, 0, 256, 257, 5, 102, 0, 0, 257, 46, 1, 0, 0, 0, 258, 259, 5, 106,
		0, 0, 259, 260, 5, 111, 0, 0, 260, 261, 5, 105, 0, 0, 261, 262, 5, 110,
		0, 0, 262, 48, 1, 0, 0, 0, 263, 264, 5, 97, 0, 0, 264, 265, 5, 112, 0,
		0, 265, 266, 5, 112, 0, 0, 266, 267, 5, 101, 0, 0, 267, 268, 5, 110, 0,
		0, 268, 269, 5, 100, 0, 0, 269, 50, 1, 0, 0, 0, 270, 271, 5, 105, 0, 0,
		271, 272, 5, 110, 0, 0, 272, 52, 1, 0, 0, 0, 273, 274, 5, 116, 0, 0, 274,
		275, 5, 114, 0, 0, 275, 276, 5, 117, 0, 0, 276, 283, 5, 101, 0, 0, 277,
		278, 5, 102, 0, 0, 278, 279, 5, 97, 0, 0, 279, 280, 5, 108, 0, 0, 280,
		281, 5, 115, 0, 0, 281, 283, 5, 101, 0, 0, 282, 273, 1, 0, 0, 0, 282, 277,
		1, 0, 0, 0, 283, 54, 1, 0, 0, 0, 284, 286, 7, 0, 0, 0, 285, 284, 1, 0,
		0, 0, 286, 287, 1, 0, 0, 0, 287, 285, 1, 0, 0, 0, 287, 288, 1, 0, 0, 0,
		288, 56, 1, 0, 0, 0, 289, 291, 7, 0, 0, 0, 290, 289, 1, 0, 0, 0, 291, 292,
		1, 0, 0, 0, 292, 290, 1, 0, 0, 0, 292, 293, 1, 0, 0, 0, 293, 294, 1, 0,
		0, 0, 294, 296, 5, 46, 0, 0, 295, 297, 7, 0, 0, 0, 296, 295, 1, 0, 0, 0,
		297, 298, 1, 0, 0, 0, 298, 296, 1, 0, 0, 0, 298, 299, 1, 0, 0, 0, 299,
		58, 1, 0, 0, 0, 300, 306, 5, 34, 0, 0, 301, 305, 8, 1, 0, 0, 302, 303,
		5, 92, 0, 0, 303, 305, 9, 0, 0, 0, 304, 301, 1, 0, 0, 0, 304, 302, 1, 0,
		0, 0, 305, 308, 1, 0, 0, 0, 306, 304, 1, 0, 0, 0, 306, 307, 1, 0, 0, 0,
		307, 309, 1, 0, 0, 0, 308, 306, 1, 0, 0, 0, 309, 310, 5, 34, 0, 0, 310,
		60, 1, 0, 0, 0, 311, 312, 5, 39, 0, 0, 312, 313, 9, 0, 0, 0, 313, 314,
		5, 39, 0, 0, 314, 62, 1, 0, 0, 0, 315, 319, 7, 2, 0, 0, 316, 318, 7, 3,
		0, 0, 317, 316, 1, 0, 0, 0, 318, 321, 1, 0, 0, 0, 319, 317, 1, 0, 0, 0,
		319, 320, 1, 0, 0, 0, 320, 64, 1, 0, 0, 0, 321, 319, 1, 0, 0, 0, 322, 323,
		5, 43, 0, 0, 323, 66, 1, 0, 0, 0, 324, 325, 5, 45, 0, 0, 325, 68, 1, 0,
		0, 0, 326, 327, 5, 42, 0, 0, 327, 70, 1, 0, 0, 0, 328, 329, 5, 47, 0, 0,
		329, 72, 1, 0, 0, 0, 330, 331, 5, 37, 0, 0, 331, 74, 1, 0, 0, 0, 332, 333,
		5, 33, 0, 0, 333, 76, 1, 0, 0, 0, 334, 335, 5, 38, 0, 0, 335, 336, 5, 38,
		0, 0, 336, 78, 1, 0, 0, 0, 337, 338, 5, 124, 0, 0, 338, 339, 5, 124, 0,
		0, 339, 80, 1, 0, 0, 0, 340, 341, 5, 61, 0, 0, 341, 342, 5, 61, 0, 0, 342,
		82, 1, 0, 0, 0, 343, 344, 5, 33, 0, 0, 344, 345, 5, 61, 0, 0, 345, 84,
		1, 0, 0, 0, 346, 347, 5, 60, 0, 0, 347, 86, 1, 0, 0, 0, 348, 349, 5, 60,
		0, 0, 349, 350, 5, 61, 0, 0, 350, 88, 1, 0, 0, 0, 351, 352, 5, 62, 0, 0,
		352, 90, 1, 0, 0, 0, 353, 354, 5, 62, 0, 0, 354, 355, 5, 61, 0, 0, 355,
		92, 1, 0, 0, 0, 356, 357, 5, 61, 0, 0, 357, 94, 1, 0, 0, 0, 358, 359, 5,
		58, 0, 0, 359, 360, 5, 61, 0, 0, 360, 96, 1, 0, 0, 0, 361, 362, 5, 43,
		0, 0, 362, 363, 5, 61, 0, 0, 363, 98, 1, 0, 0, 0, 364, 365, 5, 45, 0, 0,
		365, 366, 5, 61, 0, 0, 366, 100, 1, 0, 0, 0, 367, 368, 5, 43, 0, 0, 368,
		369, 5, 43, 0, 0, 369, 102, 1, 0, 0, 0, 370, 371, 5, 45, 0, 0, 371, 372,
		5, 45, 0, 0, 372, 104, 1, 0, 0, 0, 373, 374, 5, 40, 0, 0, 374, 106, 1,
		0, 0, 0, 375, 376, 5, 41, 0, 0, 376, 108, 1, 0, 0, 0, 377, 378, 5, 123,
		0, 0, 378, 110, 1, 0, 0, 0, 379, 380, 5, 125, 0, 0, 380, 112, 1, 0, 0,
		0, 381, 382, 5, 91, 0, 0, 382, 114, 1, 0, 0, 0, 383, 384, 5, 93, 0, 0,
		384, 116, 1, 0, 0, 0, 385, 386, 5, 46, 0, 0, 386, 118, 1, 0, 0, 0, 387,
		388, 5, 44, 0, 0, 388, 120, 1, 0, 0, 0, 389, 390, 5, 59, 0, 0, 390, 122,
		1, 0, 0, 0, 391, 393, 7, 4, 0, 0, 392, 391, 1, 0, 0, 0, 393, 394, 1, 0,
		0, 0, 394, 392, 1, 0, 0, 0, 394, 395, 1, 0, 0, 0, 395, 396, 1, 0, 0, 0,
		396, 397, 6, 61, 0, 0, 397, 124, 1, 0, 0, 0, 398, 399, 5, 47, 0, 0, 399,
		400, 5, 47, 0, 0, 400, 404, 1, 0, 0, 0, 401, 403, 8, 5, 0, 0, 402, 401,
		1, 0, 0, 0, 403, 406, 1, 0, 0, 0, 404, 402, 1, 0, 0, 0, 404, 405, 1, 0,
		0, 0, 405, 407, 1, 0, 0, 0, 406, 404, 1, 0, 0, 0, 407, 408, 6, 62, 0, 0,
		408, 126, 1, 0, 0, 0, 409, 410, 5, 47, 0, 0, 410, 411, 5, 42, 0, 0, 411,
		415, 1, 0, 0, 0, 412, 414, 9, 0, 0, 0, 413, 412, 1, 0, 0, 0, 414, 417,
		1, 0, 0, 0, 415, 416, 1, 0, 0, 0, 415, 413, 1, 0, 0, 0, 416, 418, 1, 0,
		0, 0, 417, 415, 1, 0, 0, 0, 418, 419, 5, 42, 0, 0, 419, 420, 5, 47, 0,
		0, 420, 421, 1, 0, 0, 0, 421, 422, 6, 63, 0, 0, 422, 128, 1, 0, 0, 0, 11,
		0, 282, 287, 292, 298, 304, 306, 319, 394, 404, 415, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// VlangLexerInit initializes any static state used to implement VlangLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewVlangLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func VlangLexerInit() {
	staticData := &VlangLexerLexerStaticData
	staticData.once.Do(vlanglexerLexerInit)
}

// NewVlangLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewVlangLexer(input antlr.CharStream) *VlangLexer {
	VlangLexerInit()
	l := new(VlangLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &VlangLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "Vlang.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// VlangLexer tokens.
const (
	VlangLexerT__0          = 1
	VlangLexerT__1          = 2
	VlangLexerT__2          = 3
	VlangLexerT__3          = 4
	VlangLexerT__4          = 5
	VlangLexerMUT           = 6
	VlangLexerSTRUCT        = 7
	VlangLexerFUNC          = 8
	VlangLexerPRINT         = 9
	VlangLexerIF            = 10
	VlangLexerELSE          = 11
	VlangLexerFOR           = 12
	VlangLexerWHILE         = 13
	VlangLexerSWITCH        = 14
	VlangLexerCASE          = 15
	VlangLexerDEFAULT       = 16
	VlangLexerBREAK         = 17
	VlangLexerCONTINUE      = 18
	VlangLexerRETURN        = 19
	VlangLexerCOLON         = 20
	VlangLexerLEN           = 21
	VlangLexerCAP           = 22
	VlangLexerINDEXOF       = 23
	VlangLexerJOIN          = 24
	VlangLexerAPPEND        = 25
	VlangLexerIN            = 26
	VlangLexerBOOLEANO      = 27
	VlangLexerENTERO        = 28
	VlangLexerDECIMAL       = 29
	VlangLexerCADENA        = 30
	VlangLexerCARACTER      = 31
	VlangLexerID            = 32
	VlangLexerPLUS          = 33
	VlangLexerMINUS         = 34
	VlangLexerMUL           = 35
	VlangLexerDIV           = 36
	VlangLexerMOD           = 37
	VlangLexerNOT           = 38
	VlangLexerAND           = 39
	VlangLexerOR            = 40
	VlangLexerEQ            = 41
	VlangLexerNEQ           = 42
	VlangLexerLT            = 43
	VlangLexerLE            = 44
	VlangLexerGT            = 45
	VlangLexerGE            = 46
	VlangLexerASSIGN        = 47
	VlangLexerASSIGN_DECL   = 48
	VlangLexerPLUSEQ        = 49
	VlangLexerMINUSEQ       = 50
	VlangLexerINC           = 51
	VlangLexerDEC           = 52
	VlangLexerLPAREN        = 53
	VlangLexerRPAREN        = 54
	VlangLexerLBRACE        = 55
	VlangLexerRBRACE        = 56
	VlangLexerLSQUARE       = 57
	VlangLexerRSQUARE       = 58
	VlangLexerDOT           = 59
	VlangLexerCOMMA         = 60
	VlangLexerSEMICOLON     = 61
	VlangLexerWS            = 62
	VlangLexerLINE_COMMENT  = 63
	VlangLexerBLOCK_COMMENT = 64
)
